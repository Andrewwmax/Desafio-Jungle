<?php

use App\Http\Controller\CidadaoController;
use PHPUnit\Framework\TestCase;

use App\Core\Cidadao;
use App\Core\Contracts\CidadaoRepositoryInterface;
use App\Application\CadastroCidadaoService;
use App\Application\BuscarCidadaoPorNisService;

class FakeCidadaoRepoControllerTest implements CidadaoRepositoryInterface {
    private array $dados = [];

    public function salvar(Cidadao $cidadao): void {
        $this->dados[$cidadao->getNis()] = $cidadao;
    }

    public function buscarPorNis(string $nis): ?Cidadao {
        return $this->dados[$nis] ?? null;
    }

    public function limpar() {
        $this->dados = [];
    }

    public function lista(): array {
        return $this->dados;
    }
}

class CidadaoControllerTest extends TestCase {
    private CidadaoController $controller;
    private FakeCidadaoRepoControllerTest $repo;

    protected function setUp(): void {
        $this->repo = new FakeCidadaoRepoControllerTest();

        $this->controller = new CidadaoController();
    }

    public function testCadastroDeveRetornarMensagemDeSucesso()
    {
        ob_start();
        $_POST = ['nome' => 'Maria Silva'];

        $this->controller->handle();

        $saida = ob_get_clean();

        $this->assertStringContainsString('Cadastro realizado com sucesso!', $saida);
        $this->assertStringContainsString('NIS:', $saida);
    }

    public function testBuscaComNisValidoRetornaNome() {
        $cidadao = new Cidadao('Carlos Teste', '12345678901');
        $this->repo->salvar($cidadao);

        ob_start();
        $_POST = ['nis' => '12345678901'];

        $this->controller->handle();

        $saida = ob_get_clean();

        $this->assertStringContainsString('Cidadão encontrado: Carlos Teste', $saida);
        $this->assertStringContainsString('NIS: 12345678901', $saida);
    }

    public function testBuscaComNisInvalidoExibeNaoEncontrado() {
        ob_start();
        $_GET = ['nis' => '00000000000'];

        $this->controller->handle();

        $saida = ob_get_clean();

        $this->assertStringContainsString('Cidadão não encontrado', $saida);
    }
}
